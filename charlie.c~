
// /------------------------|-----------------------\
// |-              Macros and Includes             -|
// \------------------------|-----------------------/


#include <termios.h>
#include <ctype.h>

#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>

// /------------------------|-----------------------\
// |-                   Definition                 -|
// \------------------------|-----------------------/

void error(const char *errorMessage);

void disableRawMode(void);
void enableRawMode(void);

// /------------------------|-----------------------\
// |-                 Implementation               -|
// \------------------------|-----------------------/

struct termios gOriginalTermios;

void error(const char *errorMessage) {
    perror(errorMessage); exit(1);
    return;
}

void disableRawMode(void) {
    tcsetattr(STDIN_FILENO, TCSAFLUSH, &gOriginalTermios);
    return;
}

void enableRawMode(void) {
    tcgetattr(STDIN_FILENO, &gOriginalTermios);
    atexit(disableRawMode);
    
    struct termios raw = gOriginalTermios;
    raw.c_iflag &= ~(BRKINT | ICRNL | ISTRIP | IXON);
    raw.c_lflag &= ~(ECHO | ICANON | IEXTEN | ISIG);
    raw.c_oflag &= ~(OPOST);
    raw.c_cflag |=  (CS8);
    
    raw.c_cc[VTIME] = 1;
    raw.c_cc[VMIN] = 0;
    
    tcsetattr(STDIN_FILENO, TCSAFLUSH, &raw);
    return;
}

int main(void) {
    enableRawMode();
    
    while (1) {
	char character = '\0';
	read(STDIN_FILENO, &character, 1);
	if (iscntrl(character))
	    printf("%d\r\n", character);
	else
	    printf("%c\r\n", character);
	
	if (character == 27) break;
    }
    return 0;
}
